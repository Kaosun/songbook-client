#!/bin/bash
#args=`getopt hvqs: $*`
#set -- $args

usage()
{
cat << EOF
Usage: $0 [-h |[-s sigutil][-p private_key][-v version_number [-x]][-d dmg]]
Usage: $0 [-h |[-s sigutil][-p private_key|-c public_key][-g signature][-v version_number [-x]] dmg ]

Notes:
	* -d will overwrite dmg file passed as last argument
	* 'sigutil' is used as 'sigutil dmg priv_key' standard ouput is
	  assumed to be the signature of 'dmg' by 'priv_key'

EOF
}

OPENSSL=/usr/bin/openssl
echo "using" $(${OPENSSL} version)
VERBOSE=0
QUIET=0
DMG=""
CHECK=0
PUB_KEY=0
#unofficail way to acces last argument
DMG="${@: -1}"
PRIV_KEY='MacOS/dsa_priv_collatinus.pem'
BASEURL="http://songbookclient.lmdb.eu/"
SIGNUTIL="/Users/matthiasbussonnier/Downloads/Sparkle 1.5b6/Extras/Signing Tools/sign_update.rb"
VERSION=0
while getopts “d:hxv:p:s:c:g:” OPTION
do
     case $OPTION in
        c) 
            PUB_KEY=$OPTARG;
			CHECK=1;
			;;
		g)
			VSIG=$OPTARG;
			;;
        s)
            SIGNUTIL=$OPTARG
            ;;
        p)
            PRIV_KEY=$OPTARG
            ;;
        d)
            DMG=$OPTARG
            ;;
        h)
            usage
            exit 1
            ;;
        x)
            VERBOSE=1
            ;;
        v)  
            VERSION=$OPTARG
            ;;
        ?)
            usage
            exit
            ;;
     esac
done



#if [ $(which ruby!=0) ]
#then 
#	echo "you must have ruby installed to sign application"
#	exit -1
#fi
if [ $CHECK == 1 ] && [ -e $PUB_KEY ];
then
  $(echo $VSIG | ${OPENSSL} enc -d -base64 > uusig.sig)
  echo $(${OPENSSL} dgst -sha1 -binary  $DMG | ${OPENSSL} dgst -dss1 -verify $PUB_KEY -signature uusig.sig )
  exit 
fi

if [ ! -e "$SIGNUTIL" ];
then 
	echo "Le chemin de l'utilitaire de chiffrement est mal renseigné"
	exit -2
fi

if [[ $VERSION == 0 ]] && [[ $VERBOSE == 1 ]];
then 
	echo "avec -x vous devez indiquez un numero de version !"
	exit -3
fi
if [ "$DMG" == "" ];
then
	echo "you must set a dmg name"
	usage -1
	exit
fi
if [ ! -e "$DMG" ] 
then 
	echo "le dmg à signer n'existe pas ! ($DMG)"
	exit -4
fi

if [ ! -e $PRIV_KEY ];
then 
	echo "Vous devez entrez le chemin vers votre cle privée !"
	exit -4
fi


SIG=$("$SIGNUTIL" "$DMG" "$PRIV_KEY");

if [[ $VERBOSE == 0 ]];
then 
	echo $SIG
	#echo $("$SIGNUTIL" "$DMG" "$PRIV_KEY");
	#XX=$(${OPENSSL} dgst -sha1 -binary $DMG | ${OPENSSL} dgst -dss1 -sign $PRIV_KEY | ${OPENSSL} enc -base64)
	#echo $XX
	#echo $(echo $XX|${OPENSSL} enc -base64|${OPENSSL} enc -d -base64)
	#echo $XX
	#$(echo $XX |${OPENSSL} enc -d -base64 > uud64.sig)
	#$(echo $SIG |${OPENSSL} enc -d -base64 > uud63.sig)
	#echo $(${OPENSSL} dgst -sha1 -binary  $DMG | ${OPENSSL} dgst -dss1 -verify MacOS/dsa_pub_collatinus.pem -signature uud64.sig )
	#echo $(${OPENSSL} dgst -sha1 -binary  $DMG | ${OPENSSL} dgst -dss1 -verify MacOS/dsa_pub_collatinus.pem -signature uud63.sig )
	
	#echo $(${OPENSSL} dgst -sha1 -binary $DMG | ${OPENSSL} dgst -dss1 -sign $PRIV_KEY)
else

	SIZE=$(du "$DMG"|cut -f 1)
	echo '<enclosure url="'$BASEURL$DMG'" sparkle:version="'$VERSION'" length="'$SIZE'" type="application/octet-stream" sparkle:dsaSignature="'$SIG'" />'

fi

exit 0;

